# Generated by Django 4.1.7 on 2023-04-20 10:31

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        ("carting", "0003_alter_ouvragesection_typology"),
    ]

    operations = [
        migrations.CreateModel(
            name="OrganisationContactArea",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PilotageDistrict",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "communication_channel",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "geometry",
                    django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PilotBoardingPlace",
            fields=[
                (
                    "organisationcontactarea_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="carting.organisationcontactarea",
                    ),
                ),
                (
                    "call_sign",
                    models.CharField(
                        blank=True,
                        help_text="The designated call-sign of a radio station.",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "category_of_pilot_boarding_place",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "boarding by pilot-cruising vessel",
                                "Boarding By Pilot Cruising Vessel",
                            ),
                            ("boarding by helicopter", "Boarding By Helicopter"),
                            (
                                "pilot comes out from shore",
                                "Pilot Comes Out From Shore",
                            ),
                        ],
                        help_text="The place or general direction to which a vessel is going or directed. Remarks: In addition to a placename of a port, harbour area or terminal, the place could include generalities such as “The north-west”, or “upriver”.",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "category_of_preference",
                    models.CharField(
                        blank=True,
                        choices=[("primary", "Primary"), ("alternate", "Alternate")],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "category_of_vessel",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("general cargo vessel", "General Cargo Vessel"),
                            ("container carrier", "Container Carrier"),
                            ("tanker", "Tanker"),
                            ("bulk carrier", "Bulk Carrier"),
                            ("passenger vessel", "Passenger Vessel"),
                            ("roll-on roll-off", "Roll On Roll Off"),
                            ("refrigerated cargo vessel", "Refrigerated Cargo Vessel"),
                            ("fishing vessel", "Fishing Vessel"),
                            ("service", "Service"),
                            ("warship", "Warship"),
                            (
                                "towed or pushed composite unit",
                                "Towed Or Pushed Composite Unit",
                            ),
                            ("tug and tow", "Tug And Tow"),
                            ("light recreational", "Light Recreational"),
                            (
                                "semi-submersible offshore installation",
                                "Semi Submersible Offshore Installation",
                            ),
                            (
                                "jackup exploration or project installation",
                                "Jackup Exploration Or Project Installation",
                            ),
                            ("livestock carrier", "Livestock Carrier"),
                            ("sport fishing", "Sport Fishing"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "communication_channel",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "destination",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "pilot_movement",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("embarkation", "Embarkation"),
                            ("disembarkation", "Disembarkation"),
                            ("pilot change", "Pilot Change"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "pilot_vessel",
                    models.CharField(
                        blank=True,
                        help_text="Description of the pilot vessel. The pilot vessel is a small vessel used by a pilot to go to or from a vessel employing the pilot's services.",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("permanent", "Permanent"),
                            ("occasional", "Occasional"),
                            ("recommended", "Recommended"),
                            ("not in use", "Not In Use"),
                            ("periodic/intermittent", "Periodic Intermittent"),
                            ("reserved", "Reserved"),
                            ("temporary", "Temporary"),
                            ("private", "Private"),
                            ("mandatory", "Mandatory"),
                            ("extinguished", "Extinguished"),
                            ("illuminated", "Illuminated"),
                            ("historic", "Historic"),
                            ("public", "Public"),
                            ("synchronised", "Synchronised"),
                            ("watched", "Watched"),
                            ("un-watched", "Un Watched"),
                            ("existence doubtful", "Existence Doubtful"),
                            ("buoyed", "Buoyed"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "geometry",
                    django.contrib.gis.db.models.fields.GeometryField(srid=4326),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("carting.organisationcontactarea",),
        ),
        migrations.CreateModel(
            name="TextContent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("object_id", models.BigIntegerField()),
                (
                    "category_of_text",
                    models.CharField(
                        choices=[
                            ("abstract or summary", "Abstract Or Summary"),
                            ("extract", "Extract"),
                            ("full text", "Full Text"),
                        ],
                        max_length=255,
                    ),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Information",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("headline", models.CharField(blank=True, max_length=255)),
                (
                    "language",
                    models.CharField(
                        blank=True,
                        help_text="The language is encoded by a character code following ISO 639-3",
                        max_length=3,
                        null=True,
                    ),
                ),
                ("text", models.CharField(blank=True, max_length=255)),
                (
                    "text_content",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="information",
                        to="carting.textcontent",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FeatureName",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("object_id", models.BigIntegerField()),
                ("display_name", models.BooleanField(default=False)),
                (
                    "language",
                    models.CharField(
                        blank=True,
                        help_text="The language is encoded by a character code following ISO 639-3",
                        max_length=3,
                        null=True,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="The individual name of a feature.", max_length=255
                    ),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
        ),
    ]
