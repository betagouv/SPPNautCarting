<?xml version="1.0" encoding="UTF-8"?>
<!-- © Copyright 2018 International Hydrographic Organisation
License (Draft)
Certain parts of this document refer to or are based on the standards, documents, schemas,
or other material of the International Hydrographic Organization / Organisation Hydrographique
Internationale (IHO/OHI).
The IHO material can be obtained from the IHO Web site at www.iho.int or from the International
Hydrographic Organization Secretariat.

Permission to copy and distribute this document is hereby granted provided that this notice is
retained on all copies, and that the IHO is credited when the material is redistributed
or used in part or whole in derivative works.
Redistributions in binary form must reproduce this notice in the documentation and/or other
materials provided with the distribution.

Disclaimer
This work is provided by the copyright holders and contributors "as is" and any express or implied
warranties, including, but not limited to, the implied warranties of merchantability and fitness
for a particular purpose are disclaimed. In no event shall the copyright owner or contributors be
liable for any direct, indirect, incidental, special, exemplary, or consequential damages (including,
but not limited to, procurement of substitute goods or services; loss of use, data, or profits; or
business interruption) however caused and on any theory of liability, whether in contract, strict
liability, or tort (including negligence or otherwise) arising in any way out of the use of this
software, even if advised of the possibility of such damage.
-->
<!-- Intial version 4.0.0 Build 20180619 DRAFT permit file schema for S-100 Edition 4.0.0.
      Build 20181015 Updated to match permit file example in post-TSM6 finalization of Part 15
 -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
  elementFormDefault="unqualified"
  targetNamespace="http://www.iho.int/s100/de"
  xmlns:S100DE="http://www.iho.int/s100/de"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="4.0.0-20181015">

  <xs:complexType name="S100_DigitalSignatureValue" mixed="true">
    <xs:sequence>
      <xs:element name="signedPublicKey">
        <xs:complexType>
          <xs:simpleContent>
            <xs:extension base="xs:base64Binary">
              <xs:attribute name="id" type="xs:string" use="required"/>
              <xs:attribute name="rootKey" type="xs:string" use="optional"/>
            </xs:extension>
          </xs:simpleContent>
        </xs:complexType>
      </xs:element>
      <xs:element name="digitalSignature">
        <xs:simpleType>
          <xs:restriction base="xs:hexBinary">
            <xs:maxLength value="100"><xs:annotation><xs:documentation>up to 100 octets</xs:documentation></xs:annotation></xs:maxLength>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="productType">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="permit">
        <xs:complexType>
          <xs:annotation><xs:documentation>Type for permit element in product record</xs:documentation></xs:annotation>
          <xs:sequence>
            <xs:element name="filename" type="xs:string"/>
            <xs:element name="edition" type="xs:string"/>
            <xs:element name="expiry">
              <xs:annotation><xs:documentation>Expiry date as described in S-100 4.0.0 (October 2018 draft) Table 15-6. Pattern used instead of the XML schema built-in date type because Table 15-6 specifies a format different from the XML Schema built-in. Note that dates cannot be properly validated using patterns; switching to the XML Schema built-in type is recommended.</xs:documentation></xs:annotation>
              <xs:simpleType>
                <xs:restriction base="xs:string">
                  <xs:pattern value="([1-2]\d{3})(0[1-9]|1[0-2])(0[1-9]|[12]\d|3[01])"/>
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
            <xs:element name="encryptedKey" type="S100DE:encryptedKeyType"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="id" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="productsType">
      <xs:sequence>
        <xs:element maxOccurs="unbounded" name="product" type="S100DE:productType"/>
      </xs:sequence>
  </xs:complexType>

  <xs:simpleType name="userpermitType">
    <xs:annotation>
      <xs:documentation>Data type for userpermit field. See S-100 4.0.0 15-7.3. Precise datatype and constraints TBD.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:hexBinary">
      <xs:length value="23"><xs:annotation><xs:documentation>length in octets</xs:documentation></xs:annotation></xs:length>
      <xs:pattern value="[0-9A-Z]+"><xs:annotation><xs:documentation>S-100 (Oct. 2018) 15-7.3.1: Any alphabetic character will be written in upper case.</xs:documentation></xs:annotation></xs:pattern>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="versionType">
    <xs:annotation>
      <xs:documentation>Data type for version number. Pattern TBD pending finalization of MRN rules, tentatively either a version number or an MRN</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:minLength value="3"/>
      <xs:pattern value="(\d+\.\d+(\.\d+)?)|(mrn:\S+)"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="dataserverType">
    <xs:annotation>
      <xs:documentation>Data type for dataserver field. Type and constraints TBD. Part 15 says only that it "should be consistent and use the same organizational contact as defined in S100_ExchangeCatalogue – contact." That is a complex type, presumably "contact.organization" is intended. Checking will have to done by the SYSTEM since permit.xml and the exchange catalogue are distinct files.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string"/>
  </xs:simpleType>

  <xs:simpleType name="encryptedKeyType">
    <xs:annotation>
      <xs:documentation>S-100 4.0.0 Table 15-6. EK contains the decryption key for the specified edition of the product file. 32 digit hexadecimal number.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:hexBinary">
      <xs:length value="16"><xs:annotation><xs:documentation>length in octets</xs:documentation></xs:annotation></xs:length>
    </xs:restriction>
  </xs:simpleType>
 
 <xs:complexType name="headerType">
      <xs:sequence>
        <!--<xs:element name="date" type="xs:dateTime"><xs:annotation><xs:documentation></xs:documentation></xs:annotation></xs:element>-->
      <xs:element name="date">
        <xs:annotation><xs:documentation>Date as described in S-100 4.0.0 (October 2018 draft) Table 15-5. Pattern used instead of the XML schema built-in dateTime type because Table 15-5 specifies a format different from the XML Schema built-in. Note that dates cannot be properly validated using patterns; switching to the XML Schema built-in type is recommended.</xs:documentation></xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:pattern value="([1-2]\d{3})(0[1-9]|1[0-2])(0[1-9]|[12]\d|3[01])[ ]((([01]\d|2[0-3])(:[0-5]\d){2})|(24:00:00))"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
        <xs:element name="dataserver" type="S100DE:dataserverType"><xs:annotation><xs:documentation>Name of Data Server who has generated the permit file. The Data Server name should be consistent and use the same organizational contact as defined in S100_ExchangeCatalogue – contact</xs:documentation></xs:annotation></xs:element>
        <xs:element name="version" type="S100DE:versionType"><xs:annotation><xs:documentation>Version number of S-100. It will be compatible with the IHO version numbering scheme X.Y.Z. For example 4.0.0</xs:documentation></xs:annotation></xs:element>
        <xs:element name="userpermit" type="S100DE:userpermitType"><xs:annotation><xs:documentation>The user permit that the permit is for. This allows the client system or implementer to validate the destination. The end-user system must be capable of checking if the permit is for the designated system on a multi system bridge</xs:documentation></xs:annotation></xs:element>
      </xs:sequence>
  </xs:complexType>

  <xs:complexType name="permitType">
      <xs:annotation><xs:documentation>Type for top-level permit element</xs:documentation></xs:annotation>
      <xs:sequence>
        <xs:element name="header" type="S100DE:headerType"/>
        <xs:element name="products" type="S100DE:productsType"/>
        <xs:element name="digitalSignatureValue" type="S100DE:S100_DigitalSignatureValue"/>
      </xs:sequence>
  </xs:complexType>

  <xs:element name="permit" type="S100DE:permitType"/>

</xs:schema>
